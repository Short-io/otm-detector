{"version":3,"file":"index.cjs","sources":["blocklist.js","index.js"],"sourcesContent":["export const OTM_HOSTS = new Set([\n  \"recv6.erinn.biz\",\n  \"recv7.erinn.biz\",\n  \"recv8.erinn.biz\",\n  \"recv1.erinn.biz\",\n  \"recv100.erinn.biz\",\n  \"recv101.erinn.biz\",\n  \"recv2.erinn.biz\",\n  \"recv3.erinn.biz\",\n  \"recv4.erinn.biz\",\n  \"email-fake.com\",\n  \"emailfake.com\",\n  \"emailfake.com\",\n  \"generator.email\",\n  \"in.mail.tm\",\n  \"mail.mailinator.com\",\n  \"mail.onetimemail.org\",\n  \"mail2.mailinator.com\",\n  \"mailinator.com\",\n  \"mx.mail-data.net\",\n  \"mx1-hosting.jellyfish.systems\",\n  \"mx1.emaildbox.pro\",\n  \"mx1.forwardemail.net\",\n  \"mx1.simplelogin.co\",\n  \"mx2-hosting.jellyfish.systems\",\n  \"mx2.den.yt\",\n  \"mx2.emaildbox.pro\",\n  \"mx2.forwardemail.net\",\n  \"mx2.simplelogin.co\",\n  \"mx3-hosting.jellyfish.systems\",\n  \"mx3.emaildbox.pro\",\n  \"mx4.emaildbox.pro\",\n  \"mx5.emaildbox.pro\",\n  \"prd-smtp.10minutemail.com\",\n  \"route1.mx.cloudflare.net\",\n  \"route2.mx.cloudflare.net\",\n  \"route3.mx.cloudflare.net\",\n  \"tempm.com\",\n])\n\nexport const OTM_IPS = new Set([\n  \"136.243.103.68\",\n  \"137.184.243.159\",\n  \"146.190.197.86\",\n  \"15.204.213.223\",\n  \"15.235.72.244\",\n  \"15.235.72.245\",\n  \"157.230.67.25\",\n  \"164.90.254.47\",\n  \"167.114.206.221\",\n  \"167.172.1.68\",\n  \"173.225.105.34\",\n  \"194.31.59.229\",\n  \"23.239.2.211\",\n  \"24.199.67.157\",\n  \"51.222.102.161\",\n  \"54.39.17.59\",\n  \"54.39.193.199\",\n  \"66.70.233.243\", // openmail.pro\n  \"92.255.84.131\",\n  \"96.126.99.62\",\n])","import dns from \"node:dns/promises\";\nimport { OTM_HOSTS, OTM_IPS } from './blocklist.js';\n\nexport const isOneTimeMail = async (domain, options = {}) => {\n    const otmDns = options.dns || dns;\n    try {\n        const records = await otmDns.resolveMx(domain)\n        if (records.length === 0) { // this email is invalid, but we are not a validator\n            return false\n        }\n        if (records.some((record) => OTM_HOSTS.has(record.exchange))) {\n            return true\n        }\n        // check first record for new\n        const mxHost = records[0].exchange\n        const mxAddresses = await otmDns.resolve4(mxHost)\n        if (mxAddresses.some((address) => OTM_IPS.has(address))) {\n            return true\n        }\n        return false;\n    } catch (e) {\n        if (e.code === \"ENOTFOUND\") {\n            return false\n        }\n        throw e\n    }\n};"],"names":[],"mappings":";uHAAO,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC;AACjC,EAAE,iBAAiB;AACnB,EAAE,iBAAiB;AACnB,EAAE,iBAAiB;AACnB,EAAE,iBAAiB;AACnB,EAAE,mBAAmB;AACrB,EAAE,mBAAmB;AACrB,EAAE,iBAAiB;AACnB,EAAE,iBAAiB;AACnB,EAAE,iBAAiB;AACnB,EAAE,gBAAgB;AAClB,EAAE,eAAe;AACjB,EAAE,eAAe;AACjB,EAAE,iBAAiB;AACnB,EAAE,YAAY;AACd,EAAE,qBAAqB;AACvB,EAAE,sBAAsB;AACxB,EAAE,sBAAsB;AACxB,EAAE,gBAAgB;AAClB,EAAE,kBAAkB;AACpB,EAAE,+BAA+B;AACjC,EAAE,mBAAmB;AACrB,EAAE,sBAAsB;AACxB,EAAE,oBAAoB;AACtB,EAAE,+BAA+B;AACjC,EAAE,YAAY;AACd,EAAE,mBAAmB;AACrB,EAAE,sBAAsB;AACxB,EAAE,oBAAoB;AACtB,EAAE,+BAA+B;AACjC,EAAE,mBAAmB;AACrB,EAAE,mBAAmB;AACrB,EAAE,mBAAmB;AACrB,EAAE,2BAA2B;AAC7B,EAAE,0BAA0B;AAC5B,EAAE,0BAA0B;AAC5B,EAAE,0BAA0B;AAC5B,EAAE,WAAW;AACb,CAAC;;AAEM,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC;AAC/B,EAAE,gBAAgB;AAClB,EAAE,iBAAiB;AACnB,EAAE,gBAAgB;AAClB,EAAE,gBAAgB;AAClB,EAAE,eAAe;AACjB,EAAE,eAAe;AACjB,EAAE,eAAe;AACjB,EAAE,eAAe;AACjB,EAAE,iBAAiB;AACnB,EAAE,cAAc;AAChB,EAAE,gBAAgB;AAClB,EAAE,eAAe;AACjB,EAAE,cAAc;AAChB,EAAE,eAAe;AACjB,EAAE,gBAAgB;AAClB,EAAE,aAAa;AACf,EAAE,eAAe;AACjB,EAAE,eAAe;AACjB,EAAE,eAAe;AACjB,EAAE,cAAc;AAChB,CAAC,EC1DW,MAAC,aAAa,GAAG,OAAO,MAAM,EAAE,OAAO,GAAG,EAAE,KAAK;AAC7D,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,GAAG;AACrC,IAAI,IAAI;AACR,QAAQ,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM;AACrD,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,YAAY,OAAO;AACnB;AACA,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE;AACtE,YAAY,OAAO;AACnB;AACA;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAClC,QAAQ,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM;AACxD,QAAQ,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE;AACjE,YAAY,OAAO;AACnB;AACA,QAAQ,OAAO,KAAK;AACpB,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,QAAQ,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;AACpC,YAAY,OAAO;AACnB;AACA,QAAQ,MAAM;AACd;AACA"}